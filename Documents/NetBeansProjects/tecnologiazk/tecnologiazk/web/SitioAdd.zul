<?page title="Mantenimiento de Sitios" contentType="text/html;charset=UTF-8"?>
<?component name="Menu" macroURI="/MacroMenu.zul"?>
<zk>
    <Menu/>
    
<window id="modalSitioAdd" title="Agregar Nuevo Sitio" border="normal"
        height="670px" position="center,center" closable="true"
        action="show: slideDown;hide: slideUp" apply="org.zkoss.bind.BindComposer, Controller.EmpleadorCargosDialog" 
        viewModel="@id('vm') @init('UIVM.SitioVM')">

   
  
    <vlayout>
 
    <grid>
        <rows>
            <row>
              Nombre:  <textbox  value="@bind(vm.sitioNombre)" width="150px"  /> 
              Direccion:  <textbox  value="@bind(vm.direccion)" width="150px"  /> 
            </row>
            <row>
            Latitud:  <textbox id="lat1"  value="@bind(vm.latitud)" width="150px"  />    
            Longitud:  <textbox id="lng1" value="@bind(vm.longitud)" width="150px"  /> 
            </row>
            <row>
            Telefono: <textbox  value="@bind(vm.telefono)" width="150px" /> 
            Fecha:    <datebox id="fecha"  value="@bind(vm.fecha)"/>
            </row>
            <row>
            Descripcion: <textbox value="@bind(vm.descripcion)" width="150px"  />
            </row>
           
        </rows>
    </grid>
  
    
     <space />
   
    </vlayout>
   

    <button id="aceptar" label="Aceptar" onClick="@global-command('GuardarNuevoSitio')" width="100px" height="35px" image="/img/16x16/accept.png"/>
    <button id="Sitios" label="Sitios" href="Sitio.zul" width="100px" height="35px" />
  
 <style>
    html, body {
      height: 100%;
      margin: 0;
      padding: 0;
    }

    #map_canvas {
       height: 75%;
    }

    @media print {
      html, body {
         height:75%;
      }

      #map_canvas {
         height: 75%;
      }
    }
  </style>
   <html> <![CDATA[
   <script type="text/javascript" src="http://maps.google.com/maps/api/js?key=AIzaSyAMX-eUI4e_otj_OdH1SJAbZjJOLvKKtZY&sensor=false"></script>
   <script type="text/javascript">
 
 // Global variables
var map;
var marker1;
var marker2;
var rectangle;
var rectanglex;
/**
 * Called on the initial page load.
 */
function init() {
    map = new google.maps.Map(document.getElementById('map_canvas'), {
        'zoom': 14,
        'center': new google.maps.LatLng(-27.334455471832232, -55.86204528808594),
        'mapTypeId': google.maps.MapTypeId.ROADMAP
    });

    // Creo un marker para que se pueda Editar 
    marker1 = new google.maps.Marker({
        map: map,
        position: new google.maps.LatLng (-27.334455471832232, -55.86204528808594),
        draggable: true,
        title: 'Posicion 1'
    });

    // asigna al crear el marker1 los valores iniciales del mismo en los inputs 
    actualizaPunto(marker1.getPosition(), 1);

    // llama a la funcion que actualiza los inputs
    // si se cambia el primer marker cambia los valores de sus coordenadas en los inputs
    google.maps.event.addListener(marker1, 'dragend', function() {
        actualizaPunto(marker1.getPosition(), 1);
    });


    rectangle = new google.maps.Rectangle({
        map: map,
        editable: true//,
                //draggable: true
    });
    rectanglex = new google.maps.Rectangle({
        map: map,
        editable: false//,
                //draggable: true
    });
    //Permite actualizar los valores de los imputs de lat e longitud
    google.maps.event.addListener(marker1, 'dragend', actualizar_inputs);
    

    // Allow user to drag each marker to resize the size of the Rectangle.
    google.maps.event.addListener(marker1, 'drag', redraw);
       //google.maps.event.addListener(rectangle, 'dragend', redrawpuntos);
    //google.maps.event.addListener(rectangle, 'bounds_changed', redrawpuntos);
    redraw();
    actualizar_inputs();
    ejecutar();

}// Fin del init

// funcion que llama a la funcion actualizar puntos.
function actualizar_inputs() {
    actualizaPunto(marker1.getPosition(), 1);
  
}
//funcion que actualiza los puntos del rectangulo
function redraw() {
    var latLngBounds = new google.maps.LatLngBounds(marker1.getPosition());
   rectangle.setBounds(latLngBounds);
}

function actualizaPunto(latLng, campo)
{
    var lat = latLng.lng();
    switch (campo)
    {
        case 1:
         
             zk.Widget.$(jq('$lat1')[0]).setValue(latLng.lat());
             zk.Widget.$(jq('$lng1')[0]).setValue(latLng.lng());
            break;

        default:
            break;
    }
}

function ejecutar()
{
    var indice = 0;
    var bound = 0;
    var lt1 = 0;
    var lng1 = 0;
    var lt2 = 0;
    var lng2 = 0;
    $("#puntos option").each(function() {
        if (indice == 0) {
            lt1 = parseFloat($(this).val());
            lng1 = parseFloat($(this).text());
            //alert("Bound tiene= " + bound);
            indice = 1;
        } else {
            if (indice == 1) {
                lt2 = parseFloat($(this).val());
                lng2 = parseFloat($(this).text());
                rectanglex = new google.maps.Rectangle({
                    map: map,
                    editable: false,
                    bounds: new google.maps.LatLngBounds(new google.maps.LatLng(lt1, lng1)),
                    
                    strokeColor: 'red',
                    strokeWeight: 2,
                    fillColor: '#FF0000'
                });
                ;
                indice = 0;
            }
        }
    });
}

google.maps.event.addDomListener(window, 'load', init);



    </script>
    <div id="map_canvas">
    </div> 
     ]]></html>
  </window>
  
     
       
     
     </zk>